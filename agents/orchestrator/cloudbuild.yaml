# Cloud Build configuration for Uplevel Central Orchestrator
# Builds container and deploys to Google Cloud Run

steps:
  # Step 1: Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/uplevel-orchestrator:${SHORT_SHA:-latest}'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/uplevel-orchestrator:latest'
      - '-f'
      - 'Dockerfile'
      - '.'
    dir: 'agents/orchestrator'

  # Step 2: Push the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/uplevel-orchestrator:${SHORT_SHA:-latest}'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/uplevel-orchestrator:latest'

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'uplevel-orchestrator'
      - '--image'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/uplevel-orchestrator:${SHORT_SHA:-latest}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '1000m'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '20'
      - '--timeout'
      - '300s'
      - '--set-env-vars'
      - 'GOOGLE_CLOUD_PROJECT=${PROJECT_ID}'
      - '--set-env-vars'
      - 'ORCHESTRATOR_PORT=8080'
      - '--set-env-vars'
      - 'FINANCIAL_AGENT_URL=https://uplevel-financial-agent-834012950450.us-central1.run.app'
      - '--set-env-vars'
      - 'REDIS_URL=${_REDIS_URL}'
      - '--set-env-vars'
      - 'SALES_MARKETING_AGENT_URL=${_SALES_AGENT_URL}'
      - '--set-env-vars'
      - 'LOG_LEVEL=INFO'

  # Step 4: Get service URL and test deployment
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Get the Cloud Run service URL
        SERVICE_URL=$$(gcloud run services describe uplevel-orchestrator --region=${_REGION} --format="value(status.url)")
        
        echo "Central Orchestrator deployed at: $$SERVICE_URL"
        
        # Wait for service to be ready
        echo "Waiting for service to be ready..."
        sleep 30
        
        # Test health endpoint
        if curl -f "$$SERVICE_URL/health" --max-time 30; then
          echo "✅ Health check passed"
        else
          echo "⚠️  Health check failed - service may still be starting"
        fi
        
        echo "Deployment completed!"
        echo "Orchestrator endpoint: $$SERVICE_URL"
        echo "Health check: $$SERVICE_URL/health"
        echo "API docs: $$SERVICE_URL/docs"

# Configuration
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Substitutions (can be overridden)
substitutions:
  _REGION: us-central1
  _REPOSITORY: uplevel-agents
  _REDIS_URL: redis://redis-instance:6379
  _SALES_AGENT_URL: http://localhost:8003

# Timeout
timeout: '1200s'

# Images to be pushed to registry
images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/uplevel-orchestrator:${SHORT_SHA:-latest}'
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/uplevel-orchestrator:latest'
